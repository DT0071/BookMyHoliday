<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="bookmyholiday_prc-test-suite.xml" />
	<munit:test name="bookmyholiday_prc-test-suite-getFlightTest" doc:id="d175f215-c829-4936-9e69-3b004fe24caf" description="To test resulting payload value must not be null.">
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="3b74d47b-1a4a-46ab-bfb5-1b7ccb628b8b" >
				<munit:attributes value="#[queryParams:{flight_source:'MUM',flight_destination:'LKO'}]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to getFlight" doc:id="18ddc9c7-9c7b-4624-9c5b-1a70000ee5dd" name="getFlight"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="f2dca045-c14f-4d1f-9343-2de1ae9c5c70" expression="#[payload]" is="#[MunitTools::notNullValue()]" message="Payload should not be null. It should return invalid"/>
		</munit:validation>
	</munit:test>
	<munit:test name="bookmyholiday_prc-test-suite-getFlightTest1" doc:id="8188ef4b-195f-46d7-b8ab-4da956f5f4ad" description="To mock Request component of getFlights flow.">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="f80f613d-1ee7-4558-91a7-5a40870c878b" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Request" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="HTTP_Request_configuration" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('getflight_mock_request.json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="f02cadf2-e2c6-482b-8407-aa375b423818" >
				<munit:attributes value="#[queryParams:{flight_source:'MUM',flight_destination:'LKO'}]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to getFlight" doc:id="40f7123a-e900-46b4-aec9-079fa5504460" name="getFlight"/>
		</munit:execution>
	</munit:test>
	<munit:test name="bookmyholiday_prc-test-suite-postFlightTest" doc:id="3c92053b-11f9-47c7-b4aa-e352e8f85c30" description="To mock Request component of postFlight flow.">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="002e6e40-582f-4dbb-b804-48966b8efdb4" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Request" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="HTTP_Request_configuration" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('postflight_mock_request.json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postFlight" doc:id="93202a64-41b6-47e1-afb8-448c213b3565" name="postFlight"/>
		</munit:execution>
	</munit:test>
	<munit:test name="bookmyholiday_prc-test-suite-getFlightTest2" doc:id="af078981-5794-4ce9-8e33-3ddee6fdf578" description="To test the Exception generated by getFlight.">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when HTTP: METHOD_NOT_ALLOWED" doc:id="a1e65231-1fed-4576-8fbf-2a2986219082" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="HTTP_Request_configuration" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:error typeId="HTTP:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="ea111c79-3e4a-4721-a978-19a953ece2d9">
				<munit:attributes value="#[queryParams:{flight_source:'MUM',flight_destination:'LKO'}]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to getFlight" doc:id="9d37578c-ddef-4d51-b95c-c0ced40b24c6" name="getFlight"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="028d8e62-ae70-4718-98b7-28bd95963ec5" actual="#[vars.code]" expected="#[12]" />
		</munit:validation>
	</munit:test>
	<munit:test name="bookmyholiday_prc-test-suite-postFlightTest1" doc:id="def7d988-383e-4dc7-a6a7-9a71059a68d3" description="To test exception generated by postFlight.">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="9f23aa31-c41e-492d-8cac-e6621a3832fd" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="HTTP_Request_configuration" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value="#[MunitTools::getResourceAsString('getflight_mock_request.json')]" />
					<munit-tools:error typeId="HTTP:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postFlight" doc:id="ab370971-ada2-429b-ae84-1daaf2cc4cfe" name="postFlight"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="ebba7248-4df7-4f36-b403-2b0a12907295" actual="#[vars.code]" expected="#[13]" />
		</munit:validation>
	</munit:test>
	<munit:test name="bookmyholiday_prc-test-suite-posthotelTest1" doc:id="150ca4ed-68ae-4efc-9813-544c463e6fc4" description="To test final Payload should not be Null and it should be of type json">
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="83c1124e-2918-4b01-b3f4-d57398ab27f9" >
				<munit:payload value="#[MunitTools::getResourceAsString('posthotel_body.json','UTF-8')]" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to posthotel" doc:id="82b35875-827c-43f5-a946-3f3b0126931f" name="posthotel"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="b5eccaa9-e720-488e-83ba-5eb2a712bfd7" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
			<munit-tools:assert-that doc:name="Assert that" doc:id="cb2ce74c-4149-44d6-8b6c-fd097daacabf" expression="#[payload]" is="#[MunitTools::withMediaType('application/JSON')]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="bookmyholiday_prc-test-suite-gethotelTest" doc:id="b71e9aeb-be8a-45b6-92eb-cf81457124b0" description="To test Payload generated by getHotel flow should not be Null and should be of type JSON">
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="ce4f5653-0678-4150-a0f3-d915c0f72a8a" >
				<munit:attributes value="#[queryParams:{hotel_location:'Mumbai',hotel_checkin:'2021-11-20'}]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to gethotel" doc:id="89347fc2-10fb-42b0-8bb4-54bb44772d0b" name="gethotel"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="370b8dd6-653a-4b84-a8ab-fd0c98151c54" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
			<munit-tools:assert-that doc:name="Assert that" doc:id="1224fbe8-f749-43fb-ab14-d4ed5c117a4e" is="#[MunitTools::withMediaType('application/JSON')]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>


</mule>
